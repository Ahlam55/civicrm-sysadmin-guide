#!/usr/bin/env php
<?php

$pages = include __DIR__ . '/pages.php';

$cacheDir = __DIR__ . '/cache';
$rootDir = dirname(dirname(__DIR__));
$destinationDir = "$rootDir/docs";


function clean_markdown($markdown) {
  // add domain name to all hyperlinks that point to the wiki
  $pattern = '@\]\((/confluence[^)]*)\)@';
  $replace = '](https://wiki.civicrm.org$1)';
  $markdown = preg_replace($pattern, $replace, $markdown);

  // set all headings of level 3 and above to level 2
  $pattern = '@^(##)(#+) (.*)$@m';
  $replace = '## $3';
  $markdown = preg_replace($pattern, $replace, $markdown);

  return $markdown;
}



# create hooks directory if needed
if ( !is_dir($destinationDir) ) {
  mkdir($destinationDir);
}
chdir($destinationDir);

foreach ($pages as $page) {
  $name = $page['name'];
  $markdown_file = "$name.md";
  $html = "$cacheDir/$name";
  if ( file_exists($html) && !file_exists($markdown_file) ) {
    echo "converting $name ... ";
    $outputArray = array();
    $status = 1;
    $output = '';
    exec("webpage2md $html", $outputArray, $status);
    if( $status == 0 ) {
      $output = implode("\n", $outputArray);
      $output = clean_markdown($output);
      file_put_contents($markdown_file, $output);
      echo "done" . PHP_EOL;
    }
    else {
      echo "ERROR CONVERTING $name" . PHP_EOL;
      echo "$output";
    }
  }
  else if ( !file_exists($html) ) {
    echo "WARNING: $name not yet fetched" . PHP_EOL;
  }
  else if ( file_exists($markdown_file) ) {
    echo "ignoring $name (markdown file already exists)" . PHP_EOL;
  }
}




